-RouterLinkActive : Directive permettant d'ajouter une classe CSS à un élément lorsque la route devient active
-JWT (JSON Web Tokens) : encoder un objet JSON dans un token
-platform-browser-dynamic : compilation JIT
-Bazel : build Angular apps (pas considéré comme stable)
-ng-conf et Angular Connect = conférences
-utilise webpack : outil pour construire les bundles JS
-Rx-Scavenger = garbage collector de subscription RxJS pour Angular


*** couches
-PlatformBrowser : communiquer avec le DOM
-PlatformNativeScript : utilisation de Native Script pour faire le pont entre le code Angular et le code natif Android ou iOS
-PlatformServer : générer le rendu HTML côté serveur
-Ionic qui : produire des applications natives contenant des "web views" Angular


*** balises
-<app-root></app-root> : contient l'app
-<router-outlet></router-outlet> : où afficher les components dans le template avec du routage


*** graphiques

npm install ng2-charts
npm install chart.js
npm install bootstrap

-------------------------------------------------------------

règle : le modèle ne doit pas avoir connaissance de la vue, cad il ne faut jamais manipuler directement le DOM ( = l'abstraction)

-------------------------------------------------------------

-référence local avec #
    <input type="text" #user (keyup)="0">
    <p>{{user.value}}</p>
-Element reference

-------------------------------------------------------------

lifecycle hooks
ngOnChanges() : quand un input est défini ou modifié
ngOnInit() : après le 1er ngOnChanges seulement
ngDoCheck() : après chaque détection de changement
ngAfterContentInit() : après que le contenu externe soit projeté dans le composant
ngAfterContentChecked() : après vérification du contenu externe projeté dans le composant
ngAfterViewInit() : une fois les vues initialisés
ngAfterViewChecked() : après chaque vérification des vues du comp et des enfants
ngonDestroy() : juste avant destruction 

