-Node.js est un environnement d’exécution JavaScript bas niveau côté serveur
-asynchrone et non bloquant
-monothread
-il regroupe un ensemble d'API et une VM. Le code est lu par le runtime, traduit en bytecode par la VM puis exécuté par le processeur
-utilise le moteur JS V8 de Google qui rend l’exécution du JS très rapide
-utilise le système de module CommonJS
-NPM : gestionnaire de paquets officiel de Node.js
-l'utilisation de V8 évite les incompatibilités entre navigateurs et ne nécessite donc plus de polyfills


*** mode REPL (Read-Eval-Print-Loop)
-taper du code JS dans un terminal
-commande 'node' pour l'utiliser :

$ node
>

-Exploring JavaScript objects
-Explore global objects


*** usages
-micro-service et API
-fonction dans le cloud sans serveur
-applications en ligne de commande (CLI)
-applications de bureau (éditeur Atom)


*** briques
-code js : app JS
-API nodejs : http, fs, buffer, ...
-Bindings and C++ add-ons
-V8 : 
    = moteur JS qui exécute le JS
    -écrit en C++
    -JIT compiler : switche entre compiler et run le code
    -contient la callback stack
    -alternative : Chakra, SpiderMonkey, javascriptCore
-libuv : (Unicorn Velociraptor Library)
    -contient la event loop
    -contient la event queue
    -worker thread
    -écrit en C++
    -librairie qui permet le support de l'asynchronisme I/O avec une boucle d'évènements
-c-ares
-HTTP-parser
-openssl
-zlib
-OS : OS API


*** V8, call stack, event loop

-call stack : pile d'appel
-The Message Queue : callback (keyboard events, fetch responses, DOM events)
-ES6 Job Queue : fonction des promises ; It's a way to execute the result of an async function as soon as possible ; Promises that resolve before the current function ends will be executed right after the current function.


-la event loop check en permanence s'il y a une fonction à exécuter dans la call stack
-les callback sont ajoutées dans la message queue. Ces fonctions sont ajouté dans la call stack une fois la call stack vidé des fonctions non callback
-les fonctions executor des promesses sont exécutées immédiatement


***
V8 et call stack
libuv et event-loop
setImmediate & process.nextTick
REPL
API nodejs