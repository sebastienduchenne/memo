fs.access(): check if the file exists and Node.js can access it with its permissions
fs.appendFile(): append data to a file. If the file does not exist, it's created
fs.chmod(): change the permissions of a file specified by the filename passed. 
fs.lchmod()
fs.fchmod()
fs.chown(): change the owner and group of a file specified by the filename passed. 
fs.fchown()
fs.lchown()
fs.close(): close a file descriptor
fs.copyFile(): copies a file
fs.createReadStream(): create a readable file stream
fs.createWriteStream(): create a writable file stream
fs.link(): create a new hard link to a file
fs.mkdir(): create a new folder
fs.mkdtemp(): create a temporary directory
fs.open(): set the file mode
fs.readdir(): read the contents of a directory
fs.readFile(): read the content of a file.
fs.read()
fs.readlink(): read the value of a symbolic link
fs.realpath(): resolve relative file path pointers (., ..) to the full path
fs.rename(): rename a file or folder
fs.rmdir(): remove a folder
fs.stat(): returns the status of the file identified by the filename passed. 
fs.fstat()
fs.lstat()
fs.symlink(): create a new symbolic link to a file
fs.truncate(): truncate to the specified length the file identified by the filename passed. 
fs.ftruncate()
fs.unlink(): remove a file or a symbolic link
fs.unwatchFile(): stop watching for changes on a file
fs.utimes(): change the timestamp of the file identified by the filename passed. 
fs.futimes()
fs.watchFile(): start watching for changes on a file.
fs.watch()
fs.writeFile(): write data to a file.
fs.write()


fs.writeFile('path', content, { flag: 'a+' }, err => {})
    -r+ : lire et écrire
    -w+ : lire et écrire, stream au début
    -a : écrire, stream à la fin
    -a+ : lire et écrire, stream à la fin


-méthodes asynchrones sauf si on rajoute 'Sync'
-Le chemin est relatif au dossier où est exécuté le script depuis le terminal




const fs = require('fs')

fs.open('path', 'r', (err, fd) => {
  //fd is our file descriptor
})

fs.readFile('path', (err, data) => { })

const data = fs.readFileSync('path', 'utf8')