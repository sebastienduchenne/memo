__name__ = __main__
__main__ : name of the top-level environment of the program
écriture scientifique : 1e6 -> 1 000 000
puissance **
typage dynamique
langage interprété

if __name__ == '__main__':
    sys.exit(main())  # next section explains the use of sys.exit

global : create global variables from a no-global scope
assert : tester une condition
lambda : créer une fonction lambda
    x = lambda a : a + 10
    print(x(5)) 
in : check if a value is present in a sequence / iterate through a sequence in a for loop
is : test if two variables refer to the same object
del : delete objects
nonlocal : declare that the variable is not local
and, or, not
pass : do nothing
import : importer un module
from .. import : importer qq éléments d'un module
docstring : commentaires qui décrivent les fonctions, classes et modules


*** types
boolean
int
    underscore pour regrouper les chiffres : 1_000_000
string
float
tuple ()
dictionnaire {} : ensemble de paire clé/valeur
ensemble / set {}
liste / array []

casting : int(), float(), str()


*** tuples
*** set
*** dictionnaire
*** liste
*** f-string

f-string : formatted string literals

r : force la non-interprétation des caractères spéciaux
    s = r"Voici un retour à la ligne\nEt là une autre ligne"
f : afficher des variables
    print(f"xxx {v}")

*** regex
module re

*** lire un fichier
*** module sys
*** module os
*** module random
*** list comprehension
