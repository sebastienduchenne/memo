docker attach	Attach local standard input, output, and error streams to a running container

docker build	Build an image from a Dockerfile

docker builder	Manage builds
    build	Build an image from a Dockerfile
    prune	Remove build cache

docker checkpoint	Manage checkpoints
    create	Create a checkpoint from a running container
    ls	List checkpoints for a container
    rm	Remove a checkpoint

docker commit	Create a new image from a container’s changes

docker compose
    docker compose build	Build or rebuild services
    docker compose convert	Converts the compose file to platform’s canonical format
    docker compose cp	    Copy files/folders between a service container and the local filesystem
    docker compose create	Creates containers for a service.
    docker compose down	    Stop and remove containers, networks
    docker compose events	Receive real time events from containers.
    docker compose exec	    Execute a command in a running container.
    docker compose images	List images used by the created containers
    docker compose kill	    Force stop service containers.
    docker compose logs	    View output from containers
    docker compose ls	    List running compose projects
    docker compose pause	pause services
    docker compose port	    Print the public port for a port binding.
    docker compose ps	    List containers
    docker compose pull	    Pull service images
    docker compose push	    Push service images
    docker compose restart	Restart containers
    docker compose rm	    Removes stopped service containers
    docker compose run	    Run a one-off command on a service.
    docker compose start	Start services
    docker compose stop	    Stop services
    docker compose top	    Display the running processes
    docker compose unpause	unpause services
    docker compose up	    Create and start containers

docker config	Manage Docker configs
    create	Create a config from a file or STDIN
    inspect	Display detailed information on one or more configs
    ls	List configs
    rm	Remove one or more configs

docker container	Manage containers
    attach	Attach local standard input, output, and error streams to a running container
    commit	Create a new image from a container’s changes
    cp	Copy files/folders between a container and the local filesystem
    create	Create a new container
    diff	Inspect changes to files or directories on a container’s filesystem
    exec	Run a command in a running container
    export	Export a container’s filesystem as a tar archive
    inspect	Display detailed information on one or more containers
    kill	Kill one or more running containers
    logs	Fetch the logs of a container
    ls	List containers
    pause	Pause all processes within one or more containers
    port	List port mappings or a specific mapping for the container
    prune	Remove all stopped containers
    rename	Rename a container
    restart	Restart one or more containers
    rm	Remove one or more containers
    run	Run a command in a new container
    start	Start one or more stopped containers
    stats	Display a live stream of container(s) resource usage statistics
    stop	Stop one or more running containers
    top	Display the running processes of a container
    unpause	Unpause all processes within one or more containers
    update	Update configuration of one or more containers
    wait	Block until one or more containers stop, then print their exit codes

docker context	Manage contexts
    create	Create a context
    export	Export a context to a tar or kubeconfig file
    import	Import a context from a tar or zip file
    inspect	Display detailed information on one or more contexts
    ls	List contexts
    rm	Remove one or more contexts
    update	Update a context
    use	Set the current docker context

docker cp	    Copy files/folders between a container and the local filesystem

docker create	Create a new container

docker diff	    Inspect changes to files or directories on a container’s filesystem

docker events	Get real time events from the server

docker exec	    Run a command in a running container

docker export	Export a container’s filesystem as a tar archive

docker history	Show the history of an image

docker image	Manage images
    build	Build an image from a Dockerfile
    history	Show the history of an image
    import	Import the contents from a tarball to create a filesystem image
    inspect	Display detailed information on one or more images
    load	Load an image from a tar archive or STDIN
    ls	List images
    prune	Remove unused images
    pull	Pull an image or a repository from a registry
    push	Push an image or a repository to a registry
    rm	Remove one or more images
    save	Save one or more images to a tar archive (streamed to STDOUT by default)
    tag	Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE

docker images	List images

docker import	Import the contents from a tarball to create a filesystem image

docker info	Display system-wide information

docker inspect	Return low-level information on Docker objects

docker kill	Kill one or more running containers

docker load	Load an image from a tar archive or STDIN

docker login	Log in to a Docker registry

docker logout	Log out from a Docker registry

docker logs	Fetch the logs of a container

docker manifest	Manage Docker image manifests and manifest lists
    annotate	Add additional information to a local image manifest
    create	Create a local manifest list for annotating and pushing to a registry
    inspect	Display an image manifest, or manifest list
    push	Push a manifest list to a repository
    rm	Delete one or more manifest lists from local storage

docker network	Manage networks
    connect	Connect a container to a network
    create	Create a network
    disconnect	Disconnect a container from a network
    inspect	Display detailed information on one or more networks
    ls	List networks
    prune	Remove all unused networks
    rm	Remove one or more networks

docker node	Manage Swarm nodes
    demote	Demote one or more nodes from manager in the swarm
    inspect	Display detailed information on one or more nodes
    ls	List nodes in the swarm
    promote	Promote one or more nodes to manager in the swarm
    ps	List tasks running on one or more nodes, defaults to current node
    rm	Remove one or more nodes from the swarm
    update	Update a node

docker pause	Pause all processes within one or more containers

docker plugin	Manage plugins
    create	Create a plugin from a rootfs and configuration. Plugin data directory must contain config.json and rootfs directory.
    disable	Disable a plugin
    enable	Enable a plugin
    inspect	Display detailed information on one or more plugins
    install	Install a plugin
    ls	List plugins
    push	Push a plugin to a registry
    rm	Remove one or more plugins
    set	Change settings for a plugin
    upgrade	Upgrade an existing plugin

docker port	List port mappings or a specific mapping for the container

docker ps	List containers

docker pull	Pull an image or a repository from a registry

docker push	Push an image or a repository to a registry

docker rename	Rename a container

docker restart	Restart one or more containers

docker rm	Remove one or more containers

docker rmi	Remove one or more images

docker run	Run a command in a new container

docker save	Save one or more images to a tar archive (streamed to STDOUT by default)

docker search	Search the Docker Hub for images

docker secret	Manage Docker secrets
    create	Create a secret from a file or STDIN as content
    inspect	Display detailed information on one or more secrets
    ls	List secrets
    rm	Remove one or more secrets

docker service	Manage services
    create	Create a new service
    inspect	Display detailed information on one or more services
    logs	Fetch the logs of a service or task
    ls	List services
    ps	List the tasks of one or more services
    rm	Remove one or more services
    rollback	Revert changes to a service’s configuration
    scale	Scale one or multiple replicated services
    update	Update a service

docker stack	Manage Docker stacks
    deploy	Deploy a new stack or update an existing stack
    ls	List stacks
    ps	List the tasks in the stack
    rm	Remove one or more stacks
    services	List the services in the stack

docker start	Start one or more stopped containers

docker stats	Display a live stream of container(s) resource usage statistics

docker stop	Stop one or more running containers

docker swarm	Manage Swarm
    ca	Display and rotate the root CA
    init	Initialize a swarm
    join	Join a swarm as a node and/or manager
    join-token	Manage join tokens
    leave	Leave the swarm
    unlock	Unlock swarm
    unlock-key	Manage the unlock key
    update	Update the swarm

docker system	Manage Docker
    df	Show docker disk usage
    events	Get real time events from the server
    info	Display system-wide information
    prune	Remove unused data

docker tag	Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE

docker top	Display the running processes of a container

docker trust	Manage trust on Docker images
    inspect	Return low-level information about keys and signatures
    key	Manage keys for signing Docker images
        generate	Generate and load a signing key-pair
        load	Load a private key file for signing
    revoke	Remove trust for an image
    sign	Sign an image
    signer	Manage entities who can sign Docker images
        add	Add a signer
        remove	Remove a signer

docker unpause	Unpause all processes within one or more containers

docker update	Update configuration of one or more containers

docker version	Show the Docker version information

docker volume	Manage volumes
    create	Create a volume
    inspect	Display detailed information on one or more volumes
    ls	List volumes
    prune	Remove all unused local volumes
    rm	Remove one or more volumes

docker wait	Block until one or more containers stop, then print their exit codes


----------------------------------------------------------------------------------------------------------

dockerd run the daemon
      --add-runtime runtime                   Register an additional OCI compatible runtime (default [])
      --allow-nondistributable-artifacts list Allow push of nondistributable artifacts to registry
      --api-cors-header string                Set CORS headers in the Engine API
      --authorization-plugin list             Authorization plugins to load
      --bip string                            Specify network bridge IP
  -b, --bridge string                         Attach containers to a network bridge
      --cgroup-parent string                  Set parent cgroup for all containers
      --config-file string                    Daemon configuration file (default "/etc/docker/daemon.json")
      --containerd string                     containerd grpc address
      --containerd-namespace string           Containerd namespace to use (default "moby")
      --containerd-plugins-namespace string   Containerd namespace to use for plugins (default "plugins.moby")
      --cpu-rt-period int                     Limit the CPU real-time period in microseconds for the
                                              parent cgroup for all containers
      --cpu-rt-runtime int                    Limit the CPU real-time runtime in microseconds for the
                                              parent cgroup for all containers
      --cri-containerd                        start containerd with cri
      --data-root string                      Root directory of persistent Docker state (default "/var/lib/docker")
  -D, --debug                                 Enable debug mode
      --default-address-pool pool-options     Default address pools for node specific local networks
      --default-cgroupns-mode string          Default mode for containers cgroup namespace ("host" | "private") (default "host")
      --default-gateway ip                    Container default gateway IPv4 address
      --default-gateway-v6 ip                 Container default gateway IPv6 address
      --default-ipc-mode string               Default mode for containers ipc ("shareable" | "private") (default "private")
      --default-runtime string                Default OCI runtime for containers (default "runc")
      --default-shm-size bytes                Default shm size for containers (default 64MiB)
      --default-ulimit ulimit                 Default ulimits for containers (default [])
      --dns list                              DNS server to use
      --dns-opt list                          DNS options to use
      --dns-search list                       DNS search domains to use
      --exec-opt list                         Runtime execution options
      --exec-root string                      Root directory for execution state files (default "/var/run/docker")
      --experimental                          Enable experimental features
      --fixed-cidr string                     IPv4 subnet for fixed IPs
      --fixed-cidr-v6 string                  IPv6 subnet for fixed IPs
  -G, --group string                          Group for the unix socket (default "docker")
      --help                                  Print usage
  -H, --host list                             Daemon socket(s) to connect to
      --host-gateway-ip ip                    IP address that the special 'host-gateway' string in --add-host resolves to.
                                              Defaults to the IP address of the default bridge
      --icc                                   Enable inter-container communication (default true)
      --init                                  Run an init in the container to forward signals and reap processes
      --init-path string                      Path to the docker-init binary
      --insecure-registry list                Enable insecure registry communication
      --ip ip                                 Default IP when binding container ports (default 0.0.0.0)
      --ip-forward                            Enable net.ipv4.ip_forward (default true)
      --ip-masq                               Enable IP masquerading (default true)
      --iptables                              Enable addition of iptables rules (default true)
      --ip6tables                             Enable addition of ip6tables rules (default false)
      --ipv6                                  Enable IPv6 networking
      --label list                            Set key=value labels to the daemon
      --live-restore                          Enable live restore of docker when containers are still running
      --log-driver string                     Default driver for container logs (default "json-file")
  -l, --log-level string                      Set the logging level ("debug"|"info"|"warn"|"error"|"fatal") (default "info")
      --log-opt map                           Default log driver options for containers (default map[])
      --max-concurrent-downloads int          Set the max concurrent downloads for each pull (default 3)
      --max-concurrent-uploads int            Set the max concurrent uploads for each push (default 5)
      --max-download-attempts int             Set the max download attempts for each pull (default 5)
      --metrics-addr string                   Set default address and port to serve the metrics api on
      --mtu int                               Set the containers network MTU
      --network-control-plane-mtu int         Network Control plane MTU (default 1500)
      --no-new-privileges                     Set no-new-privileges by default for new containers
      --node-generic-resource list            Advertise user-defined resource
      --oom-score-adjust int                  Set the oom_score_adj for the daemon (default -500)
  -p, --pidfile string                        Path to use for daemon PID file (default "/var/run/docker.pid")
      --raw-logs                              Full timestamps without ANSI coloring
      --registry-mirror list                  Preferred Docker registry mirror
      --rootless                              Enable rootless mode; typically used with RootlessKit
      --seccomp-profile string                Path to seccomp profile
      --selinux-enabled                       Enable selinux support
      --shutdown-timeout int                  Set the default shutdown timeout (default 15)
  -s, --storage-driver string                 Storage driver to use
      --storage-opt list                      Storage driver options
      --swarm-default-advertise-addr string   Set default address or interface for swarm advertised address
      --tls                                   Use TLS; implied by --tlsverify
      --tlscacert string                      Trust certs signed only by this CA (default "~/.docker/ca.pem")
      --tlscert string                        Path to TLS certificate file (default "~/.docker/cert.pem")
      --tlskey string                         Path to TLS key file (default "~/.docker/key.pem")
      --tlsverify                             Use TLS and verify the remote
      --userland-proxy                        Use userland proxy for loopback traffic (default true)
      --userland-proxy-path string            Path to the userland proxy binary
      --userns-remap string                   User/Group setting for user namespaces
  -v, --version                               Print version information and quit


---------------------------------------------------------------------------------------------------------------------

docker run [OPTIONS] IMAGE [COMMAND] [ARG...]


Assign name and allocate pseudo-TTY (--name, -it)
    docker run --name test -it debian
        --name test : nom du conteneur 'test'
        -it : allocate a pseudo-TTY connected to the container's stdin
        -debian : à partir de l'image debian

Capture container ID (--cidfile)

Full container capabilities (--privileged)

Set working directory (-w)

Set storage driver options per container

Mount tmpfs (--tmpfs)
    docker run -d --tmpfs /run:rw,noexec,nosuid,size=65536k my_image

Mount volume (-v, --read-only)
    docker  run  -v `pwd`:`pwd` -w `pwd` -i -t  ubuntu pwd

Add bind mounts or volumes using the --mount flag

Publish or expose port (-p, --expose)
    docker run -p 127.0.0.1:80:8080/tcp ubuntu bash

Set environment variables (-e, --env, --env-file)

Set metadata on container (-l, --label, --label-file)

Connect a container to a network (--network)

Mount volumes from container (--volumes-from)

Attach to STDIN/STDOUT/STDERR (-a)
    echo "test" | docker run -i -a stdin ubuntu cat -


Add host device to container (--device)

Access an NVIDIA GPU

Restart policies (--restart)

Add entries to container hosts file (--add-host)

Set ulimits in container (--ulimit)

Stop container with signal (--stop-signal)

Optional security options (--security-opt)

Stop container with timeout (--stop-timeout)

Specify isolation technology for container (--isolation)

Specify hard limits on memory available to containers (-m, --memory)

Configure namespaced kernel parameters (sysctls) at runtime
